/*
 * two string sequence Xn={x0,x1,...xn-1}, Ym={y0,y1,...,ym-1}
 * longest common subsequence Zk={z0,z1,...zk-1}
 * xn-1=ym-1=>zk-1=xn-1=ym-1, and Zk-1 is Xn-1 and Ym-1's LCS
 * or Zk is the Xn-1 and Ym's LCS
 * or Zk is the Xn and Ym-1's LCS
 */
public class Solution {
	public String getLongestCommonSubsequence(String str1, String str2){
		if(str1.length()==0 || str2.length()==0) return 0;
		int[][] c = new int[str1.length()][str2.length()];
		int[][] b = new int[str1.length()][str2.length()];
		for(int i=0; i<str1.length(); i++) c[i][0] = 0;
		for(int j=0; j<str2.length(); j++) c[0][j] = 0;
		
		for(int i=0; i<str1.length(); i++){
			for(int j=0; j<str2.length(); j++){
				if(str1.charAt(i)==str2.charAt(j)){
					c[i][j] = c[i-1][j-1]+1;
					b[i][j] = 1;
				}
				else if(c[i-1][j] > c[i][j-1]){
					c[i][j] = c[i-1][j];
					b[i][j] = 2;
				}
				else{
					c[i][j] = c[i][j-1];
					b[i][j] = 3;
				}
			}
		}
		
	}
}
